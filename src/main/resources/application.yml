spring:
  application:
    name: agentic-e2e-tester
  
  # Spring AI Configuration for local Ollama
  ai:
    ollama:
      base-url: http://localhost:11434
      chat:
        model: codellama:7b
        options:
          temperature: 0.1
          top-p: 0.9
          max-tokens: 2000
    vectorstore:
      pgvector:
        host: localhost
        port: 5432
        database: vectordb
        username: postgres
        password: postgres
        schema-name: ai
        table-name: vector_store
        dimensions: 1536

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: agentic-e2e-tester
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3

  # Couchbase Configuration
  couchbase:
    connection-string: couchbase://localhost
    username: Administrator
    password: password
    bucket-name: test-data

  # Web Configuration
  webflux:
    base-path: /api/v1

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
agentic:
  # Service Discovery Configuration
  service-discovery:
    auto-discovery-enabled: true
    health-check-interval: 30
    discovery-interval: 60
    health-check-timeout: 5
    actuator-health-path: /actuator/health
    discovery-mechanisms:
      - actuator
      - configuration
    predefined-services:
      - service-id: order-service
        service-name: Order Service
        base-url: http://localhost:8081
        version: "1.0.0"
        metadata:
          type: microservice
          domain: order-management
      - service-id: payment-service
        service-name: Payment Service
        base-url: http://localhost:8082
        version: "1.0.0"
        metadata:
          type: microservice
          domain: payment-processing
      - service-id: inventory-service
        service-name: Inventory Service
        base-url: http://localhost:8083
        version: "1.0.0"
        metadata:
          type: microservice
          domain: inventory-management
  
  testing:
    execution:
      timeout: 300s
      retry-attempts: 3
      parallel-execution: true
    correlation:
      header-name: X-Correlation-ID
    memory:
      pattern-storage-enabled: true
      max-patterns: 1000
    monitoring:
      real-time-reporting: true
      metrics-collection: true
  
  # REST API Integration Configuration
  rest:
    connection-timeout: 10000
    read-timeout: 30000
    write-timeout: 30000
    max-connections: 100
    max-connections-per-route: 20
  
  # Authentication Configuration
  auth:
    default-username: ${AGENTIC_AUTH_USERNAME:#{null}}
    default-password: ${AGENTIC_AUTH_PASSWORD:#{null}}
    default-token: ${AGENTIC_AUTH_TOKEN:#{null}}
    default-api-key: ${AGENTIC_AUTH_API_KEY:#{null}}

# Logging Configuration
logging:
  level:
    com.agentic: DEBUG
    org.springframework.ai: DEBUG
    org.springframework.kafka: INFO
    com.couchbase: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/agentic-e2e-tester.log